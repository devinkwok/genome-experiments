---
ops: [train, evaluate]
model: {
    path: models/ggcnn.py,
    class: DeepSEA,
    class_args: {  # DeeperDeepSEA.__init__ inputs
        data_augmentation: rc,
        # data_augmentation: all,
    },
    non_strand_specific: mean
}
sampler: !obj:selene_sdk.samplers.MultiFileSampler {
    train_sampler: !obj:selene_sdk.samplers.file_samplers.MatFileSampler {
        filepath: data/train.mat,
        sequence_key: trainxdata,
        targets_key: traindata,
        sequence_batch_axis: 2,
        sequence_alphabet_axis: 1,
        targets_batch_axis: 1,
        shuffle: True,
        random_seed: 12
    },
    validate_sampler: !obj:selene_sdk.samplers.file_samplers.MatFileSampler {
        filepath: data/valid.mat,
        sequence_key: validxdata,
        targets_key: validdata,
        sequence_batch_axis: 0,
        sequence_alphabet_axis: 1,
        targets_batch_axis: 0,
        shuffle: False
    },
    test_sampler: !obj:selene_sdk.samplers.file_samplers.MatFileSampler {
        filepath: data/test.mat,
        sequence_key: testxdata,
        targets_key: testdata,
        sequence_batch_axis: 0,
        sequence_alphabet_axis: 1,
        targets_batch_axis: 0,
        shuffle: False
    },
    features: !obj:selene_sdk.utils.load_features_list {
        input_path: data/deepsea_predictor_names.txt
    }
}
train_model: !obj:selene_sdk.TrainModel {
    batch_size: 20,
    max_steps: 9600, 
    report_stats_every_n_steps: 640,
    n_validation_samples: 8000,  # matches the number of samples in `valid.mat`
    n_test_samples: 455024,  # matches the number of samples in `test.mat`
    use_cuda: True,
    data_parallel: True,
    report_gt_feature_n_positives: 50,
    logging_verbosity: 2
}
output_dir: mat_training_outputs
random_seed: 1447
create_subdirectory: False
...

Model specification:
MultilayerEncoder(
  (encode_layers): ModuleDict(
    (input_dropout): SeqDropout(
      (dropout): Dropout2d(p=0.05, inplace=False)
    )
    (conv00): Conv1d(4, 10, kernel_size=(3,), stride=(1,), padding=(1,))
    (relu00): ReLU()
    (pool0): MaxPool1d(kernel_size=3, stride=3, padding=0, dilation=1, ceil_mode=False)
    (norm0): BatchNorm1d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (dropout0): Dropout(p=0.05, inplace=False)
    (conv10): Conv1d(10, 20, kernel_size=(3,), stride=(1,), padding=(1,))
    (relu10): ReLU()
    (pool1): MaxPool1d(kernel_size=3, stride=3, padding=0, dilation=1, ceil_mode=False)
    (norm1): BatchNorm1d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (dropout1): Dropout(p=0.05, inplace=False)
    (view): View()
    (linear0): Linear(in_features=60, out_features=30, bias=True)
  )
  (decode_layers): ModuleDict(
    (latent_noise): GaussianNoise()
    (linear0): Linear(in_features=30, out_features=60, bias=True)
    (view): View()
    (relu00): ReLU()
    (norm0): BatchNorm1d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (pool0): Upsample(scale_factor=3.0, mode=linear)
    (conv00): ConvTranspose1d(20, 10, kernel_size=(3,), stride=(1,), padding=(1,))
    (relu10): ReLU()
    (norm1): BatchNorm1d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (pool1): Upsample(scale_factor=3.0, mode=linear)
    (conv10): ConvTranspose1d(10, 4, kernel_size=(3,), stride=(1,), padding=(1,))
    (softmax): Softmax(dim=1)
  )
)
Config values:
{'name': 'aem0', 'model': 'Multilayer', 'kernel_len': 3, 'latent_len': 30, 'seq_len': 27, 'seq_per_batch': 20, 'input_path': 'data/ref_genome/chr22_excerpt_800k.fa', 'split_prop': 0.05, 'epochs': 5, 'learn_rate': 0.2, 'input_dropout_freq': 0.05, 'latent_noise_std': 0.3, 'save_model': True, 'disable_eval': False, 'neighbour_loss_prop': 0.0, 'load_prev_model_state': None, 'hidden_len': 10, 'pool_size': 3, 'n_conv_and_pool': 2, 'n_conv_before_pool': 1, 'n_linear': 1}
Training for 5 epochs
epoch 0, avg loss 0.4824025122328199, validation acc. 0.47962962962962963
/home/devin/d/data/src/chgi/env/lib/python3.6/site-packages/torch/nn/functional.py:2973: UserWarning: Default upsampling behavior when mode=linear is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode))
epoch 1, avg loss 0.45897448892644843, validation acc. 0.5425925925925926
epoch 2, avg loss 0.44974061902478446, validation acc. 0.5370370370370371
epoch 3, avg loss 0.44117438691339905, validation acc. 0.5388888888888889
epoch 4, avg loss 0.43175446470435574, validation acc. 0.5259259259259259
Saving model to /home/devin/d/data/src/chgi/src/ae/autoencoder/aem0chr22_excerpt_800kMultilayer3x30d0.05n0.3l0.0_5at0.2.pth
Model specification:
MultilayerEncoder(
  (encode_layers): ModuleDict(
    (input_dropout): SeqDropout(
      (dropout): Dropout2d(p=0.05, inplace=False)
    )
    (conv00): Conv1d(4, 10, kernel_size=(3,), stride=(1,), padding=(1,))
    (relu00): ReLU()
    (pool0): MaxPool1d(kernel_size=3, stride=3, padding=0, dilation=1, ceil_mode=False)
    (norm0): BatchNorm1d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (dropout0): Dropout(p=0.05, inplace=False)
    (conv10): Conv1d(10, 20, kernel_size=(3,), stride=(1,), padding=(1,))
    (relu10): ReLU()
    (pool1): MaxPool1d(kernel_size=3, stride=3, padding=0, dilation=1, ceil_mode=False)
    (norm1): BatchNorm1d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (dropout1): Dropout(p=0.05, inplace=False)
    (view): View()
    (linear0): Linear(in_features=60, out_features=30, bias=True)
  )
  (decode_layers): ModuleDict(
    (latent_noise): GaussianNoise()
    (linear0): Linear(in_features=30, out_features=60, bias=True)
    (view): View()
    (relu00): ReLU()
    (norm0): BatchNorm1d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (pool0): Upsample(scale_factor=3.0, mode=linear)
    (conv00): ConvTranspose1d(20, 10, kernel_size=(3,), stride=(1,), padding=(1,))
    (relu10): ReLU()
    (norm1): BatchNorm1d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (pool1): Upsample(scale_factor=3.0, mode=linear)
    (conv10): ConvTranspose1d(10, 4, kernel_size=(3,), stride=(1,), padding=(1,))
    (softmax): Softmax(dim=1)
  )
)
Config values:
{'name': 'aem0', 'model': 'Multilayer', 'kernel_len': 3, 'latent_len': 30, 'seq_len': 27, 'seq_per_batch': 20, 'input_path': 'data/ref_genome/chr22_excerpt_800k.fa', 'split_prop': 0.05, 'epochs': 5, 'learn_rate': 0.5, 'input_dropout_freq': 0.05, 'latent_noise_std': 0.3, 'save_model': True, 'disable_eval': False, 'neighbour_loss_prop': 0.0, 'load_prev_model_state': None, 'hidden_len': 10, 'pool_size': 3, 'n_conv_and_pool': 2, 'n_conv_before_pool': 1, 'n_linear': 1}
Training for 5 epochs
epoch 0, avg loss 0.4748772171171878, validation acc. 0.5203703703703704
epoch 1, avg loss 0.4492354580985128, validation acc. 0.48518518518518516
epoch 2, avg loss 0.4354143419765311, validation acc. 0.5407407407407407
epoch 3, avg loss 0.4201917708402486, validation acc. 0.55
epoch 4, avg loss 0.4120858052490855, validation acc. 0.5351851851851852
Saving model to /home/devin/d/data/src/chgi/src/ae/autoencoder/aem0chr22_excerpt_800kMultilayer3x30d0.05n0.3l0.0_5at0.5.pth
Model specification:
MultilayerEncoder(
  (encode_layers): ModuleDict(
    (input_dropout): SeqDropout(
      (dropout): Dropout2d(p=0.05, inplace=False)
    )
    (conv00): Conv1d(4, 10, kernel_size=(3,), stride=(1,), padding=(1,))
    (relu00): ReLU()
    (pool0): MaxPool1d(kernel_size=3, stride=3, padding=0, dilation=1, ceil_mode=False)
    (norm0): BatchNorm1d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (dropout0): Dropout(p=0.05, inplace=False)
    (conv10): Conv1d(10, 20, kernel_size=(3,), stride=(1,), padding=(1,))
    (relu10): ReLU()
    (pool1): MaxPool1d(kernel_size=3, stride=3, padding=0, dilation=1, ceil_mode=False)
    (norm1): BatchNorm1d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (dropout1): Dropout(p=0.05, inplace=False)
    (view): View()
    (linear0): Linear(in_features=60, out_features=30, bias=True)
  )
  (decode_layers): ModuleDict(
    (latent_noise): GaussianNoise()
    (linear0): Linear(in_features=30, out_features=60, bias=True)
    (view): View()
    (relu00): ReLU()
    (norm0): BatchNorm1d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (pool0): Upsample(scale_factor=3.0, mode=linear)
    (conv00): ConvTranspose1d(20, 10, kernel_size=(3,), stride=(1,), padding=(1,))
    (relu10): ReLU()
    (norm1): BatchNorm1d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (pool1): Upsample(scale_factor=3.0, mode=linear)
    (conv10): ConvTranspose1d(10, 4, kernel_size=(3,), stride=(1,), padding=(1,))
    (softmax): Softmax(dim=1)
  )
)
Config values:
{'name': 'aem0', 'model': 'Multilayer', 'kernel_len': 3, 'latent_len': 30, 'seq_len': 27, 'seq_per_batch': 20, 'input_path': 'data/ref_genome/chr22_excerpt_800k.fa', 'split_prop': 0.05, 'epochs': 5, 'learn_rate': 1.0, 'input_dropout_freq': 0.05, 'latent_noise_std': 0.3, 'save_model': True, 'disable_eval': False, 'neighbour_loss_prop': 0.0, 'load_prev_model_state': None, 'hidden_len': 10, 'pool_size': 3, 'n_conv_and_pool': 2, 'n_conv_before_pool': 1, 'n_linear': 1}
Training for 5 epochs
epoch 0, avg loss 0.4665138695415833, validation acc. 0.5111111111111111
epoch 1, avg loss 0.43879902219172007, validation acc. 0.5055555555555555
epoch 2, avg loss 0.41998099818182505, validation acc. 0.587037037037037
epoch 3, avg loss 0.40844098094234366, validation acc. 0.5814814814814815
epoch 4, avg loss 0.40275465499797314, validation acc. 0.6111111111111112
Saving model to /home/devin/d/data/src/chgi/src/ae/autoencoder/aem0chr22_excerpt_800kMultilayer3x30d0.05n0.3l0.0_5at1.0.pth

real	10m46.748s
user	48m44.436s
sys	1m7.071s
